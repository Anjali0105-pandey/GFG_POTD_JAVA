
class Solution
{
    public int longestPalinSubseq(String S)
    {
        //code here
        int[][] dp=new int[S.length()][S.length()];
        for(int[] i:dp){
            Arrays.fill(i,-1);
        }
        StringBuilder sb=new StringBuilder();
        sb.append(S);
        return f(S,0,0,sb.reverse().toString(),dp);
        
    }
    int f(String s,int i,int j,String s1,int[][] dp){
        
        if(i>=s.length() || j>=s1.length()){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        if(s.charAt(i)==s1.charAt(j)){
            return 1+f(s,i+1,j+1,s1,dp);
        }
        else{
            return dp[i][j]= Math.max(f(s,i+1,j,s1,dp),f(s,i,j+1,s1,dp));
        }
    }
}
