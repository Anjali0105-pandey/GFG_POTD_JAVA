class Node
{
    int data;
    Node next;
    Node(int data)
    {
        this.data = data;
        next = null;
    }
}
*/
class Solution
{
    static Node segregate(Node head)
    {
        Node zerolist=new Node(-1);
        Node onelist=new Node(-1);
        Node twolist=new Node(-1);
        
        Node zeroptr=zerolist;
        Node oneptr=onelist;
        Node twoptr=twolist;
        
        while(head!=null){
            if(head.data==0){
                zeroptr.next=head;
                zeroptr=zeroptr.next;
            }
            else if(head.data==1){
                oneptr.next=head;
                oneptr=oneptr.next;
            }
            else{
                twoptr.next=head;
                twoptr=twoptr.next;
            }
            head=head.next;
        }
        
        if(zerolist.next!=null){
            if(onelist.next!=null){
                zeroptr.next=onelist.next;
                oneptr.next=twolist.next;
            }
            else{
                zeroptr.next=twolist.next;
            }
            twoptr.next=null;
            return zerolist.next;
        }
        else if(onelist.next!=null){
            oneptr.next=twolist.next;
            twoptr.next=null;
            return onelist.next;
        }
        else{
            twoptr.next=null;
            return twolist.next;
        }
    }
}


