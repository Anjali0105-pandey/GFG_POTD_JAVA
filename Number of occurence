class Solution {
    int count(int[] arr, int n, int x) {
    // code here
    int first = firstOccurrence(arr, n, x);
    if (first == -1) {
        return 0;
    }
    int last = lastOccurrence(arr, n, x);
    return last - first + 1;
}

int firstOccurrence(int[] arr, int n, int x) {
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x && (mid == 0 || arr[mid - 1] != x)) {
            return mid;
        } else if (arr[mid] >= x) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return -1;
}

int lastOccurrence(int[] arr, int n, int x) {
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == x && (mid == n - 1 || arr[mid + 1] != x)) {
            return mid;
        } else if (arr[mid] <= x) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return -1;
}
