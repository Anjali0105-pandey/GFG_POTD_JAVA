
/*Complete The Function Provided
Given Below is The Node Of Tree
class Node
{
    int data;
    Node left, right;
    public Node(int data)
    {
        this.data = data;
         left = right = null;
    }
}*/


class Solution{
    //Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node node) {
        //add code here.
        
        ArrayList<Integer> ans = new ArrayList<>();
        if(node==null){
            return ans;
        }
        
        Queue<Node> qu = new LinkedList<>();
        qu.add(node);
        
        while(!qu.isEmpty()){
            int size = qu.size();
            
            for(int i=0;i<size;i++){
                Node curr = qu.poll();
                if(i == size -1){
                    ans.add(curr.data);
                }
                if (curr.left != null) {
                    qu.add(curr.left);
                }

                if (curr.right != null) {
                    qu.add(curr.right);
                }
            }
        }
        return ans;
        
    }
}

